<svg:g>
    <svg:circle 
        [attr.cx]="model.x.value + 25" 
        [attr.cy]="model.y.value + 25" 
        r="25" 
        [class.hovered]="model.isHovered.value"
        [class.pressed]="model.isDragged.value"
    ></svg:circle>
    <svg:circle 
        [attr.cx]="model.x.value + 75" 
        [attr.cy]="model.y.value + 25" 
        r="25" 
        [class.hovered]="model.isHovered.value"
        [class.pressed]="model.isDragged.value"
    ></svg:circle>
    <svg:circle 
        [attr.cx]="model.x.value + 25" 
        [attr.cy]="model.y.value + 75" 
        r="25" 
        [class.hovered]="model.isHovered.value"
        [class.pressed]="model.isDragged.value"
    ></svg:circle>
    <svg:circle 
        [attr.cx]="model.x.value + 75" 
        [attr.cy]="model.y.value + 75" 
        r="25" 
        [class.hovered]="model.isHovered.value"
        [class.pressed]="model.isDragged.value"
    ></svg:circle>
    <svg:rect 
        class="overlay"
        [attr.x]="model.x.value" 
        [attr.y]="model.y.value" 
        width="100"
        height="100"
        (mouseover)="model.isHovered.next(true)" 
        (mouseout)="model.isHovered.next(false)"
        (mousedown)="model.isDragged.next(true)" 
        (mousedown)="lastMousePosition={x:$event.x, y:$event.y}" 
        (mouseup)="model.isDragged.next(false)"
        (touchstart)="model.isDragged.next(true)" 
        (touchstart)="lastMousePosition={x:$event.touches[0].clientX, y:$event.touches[0].clientY}" 
        (touchend)="model.isDragged.next(false)"></svg:rect>
</svg:g>